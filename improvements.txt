Namming : load_clubs, load_competitions on snake_case
utils.py :
- SÃ©pare la logique de chargement des donnÃ©es du reste du code.
- Les fichiers JSON sont chargÃ©s une seule fois au dÃ©marrage.
- current_app.clubs / current_app.competitions Ã©vitent de charger les fichiers plusieurs fois.

Files organization
/mon_projet/
â”‚â”€â”€ app/              
â”‚   â”œâ”€â”€ __init__.py       # Initialisation de l'application
â”‚   â”œâ”€â”€ routes.py         # Routes de l'application
â”‚   â”‚â”€â”€ utils.py          # Fonctions utilitaires comme loadClubs() et loadCompetitions()
â”‚   â”œâ”€â”€ templates/        # Templates HTML
â”‚   â”œâ”€â”€ static/           # CSS, JS, images
â”‚â”€â”€ data/                 # Fichiers JSON
â”‚â”€â”€ tests/                # Dossier des tests
â”‚â”€â”€ config.py             # Configuration de l'application
â”‚â”€â”€ run.py                # Point d'entrÃ©e de l'application
â”‚â”€â”€ requirements.txt      # DÃ©pendances
â”‚â”€â”€ .gitignore            # Fichiers Ã  ignorer

Lorsque tu dÃ©finis une route dans un Blueprint, Flask ajoute automatiquement le nom du Blueprint comme prÃ©fixe Ã  lâ€™endpoint.

ðŸ”¹ Correction dans welcome.html et def logout():
Ajout de "main." pour faire rÃ©fÃ©rence au Blueprint
- url_for("main.logout")
- url_for("main.book")

Issues

1. ERROR: Entering a unknown email crashes the app

Initial
@main.route("/showSummary", methods=["POST"])
def showSummary():
    club = [club for club in clubs if club["email"] == request.form["email"]][0]
    return render_template("welcome.html", club=club, competitions=competitions)

add flash message if email not found and display on index.html

Initial
@main.route("/book/<competition>/<club>")
def book(competition, club):
    foundClub = [c for c in clubs if c["name"] == club][0]
    foundCompetition = [c for c in competitions if c["name"] == competition][0]
    if foundClub and foundCompetition:
        return render_template(
            "booking.html", club=foundClub, competition=foundCompetition
        )
    else:
        flash("Something went wrong-please try again")
        return render_template("welcome.html", club=club, competitions=competitions)